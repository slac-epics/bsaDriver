R4.2.0         Sep 18, 2023, Kukhee Kim
               - build against timing/bsa R2.6.0
                 to improve for:
                  - Throw exceptions for memory fetch attempts out of range.  Catch and abort BSA readout
                  -  more traps for pointer errors

R4.1.0         Aug 20, 2023, Mike Skoufis, Kukhee Kim, Jeremy Lorelli, Marcio Donadio
	       - The original implementation of the severity filters for BSSS had
                 them configured per channel. BSA, instead, has the filter made
                 by buffer (EDEF). As BSSS is now tied to BSA, we needed a way
                 to control the severity filter per buffer. (Kukhee and Mike)
               - BLD channel selection can be dinamically changed in run time.
                 When deactivating channels, they stop being sent to the
                 multicast network. The severity masks, showing the severity
                 for each channel was not changed accordingly and so, when
                 a channel was deactivated the mapping between channel list
                 and severity list was lost. (Jeremy Lorelli)
               - BLD driver was reading a wrong memory position in the
                 message received from the firmware, when building the
                 multicast packet. It could cause segmentation fault,
                 too. (Marcio Donadio)
               - Using yamlLoader/R2.3.5. (Marcio Donadio)
	       - Added support for RHEL7. Before, we were building only for
                 LinuxRT. (Marcio Donadio)
               - Added checks with error messages in build-time in case
                 packages are missing. (Marcio Donadio)
               - Now it buids in PCDS environment. (Marcio Donadio)

R4.0.0    May 16, 2023, Mike Skoufis
	     - Changed the name of multiple functions so the string "bsa" comes
               as the first characters of the IOC shell function names. This
               way, when using the IOC shell "help" command, the bsa related
               functions are grouped together.
             - This change breaks compatibility with previous versions and IOCs
               using it will require a change in the st.cmd.

R3.2.1    May 8, 2023, Carolina B Mattison & Marcio Donadio
	     - Updating macros to have BSAS as root PV name for the DEVICE instead of TPR name

R3.2.0    Apr 17, 2023, Kukhee Kim
             - Fixed problem that floaded the IOC console with the messages
                   error detecting pProcessor->pending()
                   error detecting pProcessor->update()
               In one month of tests the problem still happened twice and will
               be addressed in a next release.
             - The error message above is not print to the console anymore.
               Now they can be accessed through a dbior report or PVs.

R3.1.0    Mar 27, 2023, Kukhee Kim and Marcio Donadio
             - Improve bsa "per channel" template to allow multiple $(DEV)
               names in a single ioc. Allow multi-device iocs by adding a new
               macro $(TPR) for the per channel template in BSA.
             - Complete refactorying of the README file.

R3.0.0    Mar 14, 2023    Kukhee Kim
             - merge R2.5.0-3.0-BSSS_BSA_upgrade bracnh to the master
             - merge NamingConvention branch to the master
             - support BSA/BSSS/BSAS/BLD
             - bug fixing 
               . double free issue (makeing ioc crash)
               . corrupted data in fault buffer (upgrade firmware amc-carrier-core v4.1.0 or later)
             - add control PVs for service configuration (switch local and global mdoe)

             - Huge change in record names after analysis from the naming Czars. 
               As the global PVs will also change in the TPG IOC, 
               this version is not backwards compatible with previous ones 
               from the point of view of PV names. The upgrade of IOC apps 
               need to follow the upgrade of the TPG IOC app with this same version of bsaDriver. 
               GUIs in IOC apps may need changes as the record names in bsaDriver changed.
             - Addition of a new PV $(SERVICE)_LOCAL that can be used to turn on/off the connection 
               with global PVs for BLD and BSAS. This way, someone can make local tests 
               with different timing filters, independently of how this was configured in the TPG IOC app. 
               All bsaDriver localTest database files were deleted due to this change. 
               If you use them in the IOC app, make sure to remove from Db/Makefile and st.cmd.

              -required firmware (submodule) version
                  amc-carrier-core v4.10.0
                  ruckus v4.7.0
                  surf v2.37.2
                  lcls-timing-core v3.7.0

              - required software version
                  timing/bsa R2.4.0
                (Please, check up more information in the README file)



merging NamingConvention branch to the master,            Mar 14, 2023 Kukhee Kim

merging R2.5.0-3.0-BSSS_BSA_upgrade branch to the master, Mar 14, 2023 Kukhee Kim

R2.5.0-3.1.0 Mar 13, 2023 Kukhee Kim
             - build against timing/bsa R2.2.0-1.1
             - bug fixing for double free
             - work with new bsa firmware (bug fixing for fault buffer)
             - support syslog for the debugging messsage temporally
               we are going to use printf based wrapper with a verbosity control soon
               (remark)
                - current version PVXS has an issue to support multiple iocs (PVXS servs) in a CPU,
                  we can only access epics 7 PVs in the 1st server,  and could not acces epics 7 PVs in 2nd and 3rd


R2.5.0-3.0.3 Feb 8, 2023  Kukhee Kim
             - introduce $(GLOBAL) macro for pv refix for the global PVs, (default is TPG:SYS0:1)
             - global PV names and local PV names change for recommendations of naming Czars

R2.5.0-3.0.2 Jan 30, 2023  Kukhee Kim
             - allocated bypass buffer in memory heap heap instead of stacks, since the size is ~ 9k to cover the BLD packet

R2.5.0-3.0.1 Jan 30, 2023  Dawood Alnajjar
             - Increase BLD buffer to include jumbo packets 9K
             - Fixed some variable names and added comments

R2.5.0-3.0   Jan 25, 2023  Kukhee KIm
             - discard worker thread queue for BLD/BSSS/BSAS until ioc initialization is completed

R2.5.0-2.0   Jan 23, 2023  Kukhee Kim
             - implement own device support for BSA for performance improvement

R2.5.0-1.0   Jan 22, 2023  Kukhee Kim
             - implement own device support for BSSS for preformance improvement
             - restore back to a single worker thrad for the BSSS

R2.5.0-0.4   Jan 18, 2023  Kukhee Kim
             - build against timing/bsa R2.2.0-0.2
             - throttling for the fault buffer reading
             - adjust number of Edefs to 48

R2.5.0-0.3   Dec 23, 2022   Kukhee Kim
             - fix BSA / Fault Buffer Edef boundary for new BSSS/BSA implementation

R2.5.0-0.2   Dec 21, 2022   Kukhee Kim
             - implement rate limit control PV for BSSS, a single PV conrols both BSSS0 and BSSS1

R2.5.0-0.1   Dec 15, 2022   Kukhee Kim
             - build against timing/bsa R2.2.0-0.1
             - Integration test ready version
               . remove rate control for BSSS
               . adjust number of EDEFs
                    . 29 user Edefs
                    . 15 system Edefs
                    .  4 fault buffers
               . tweaking for new BSSS
                    . 2 BSSS mouldes - BSSS0 covers 28 Edefs, BSSS1 covers 16 Edefs
               . modify listener to fit with the new srvice mask definition
                     . MSB 4 bits of the service mask: 0 -BSSS0, 1 - BSSS1, 2 - BLD, 8 - BSAS

R2.5.0-0.0   Dec 6, 2022     Kukhee
            - anchor for BSSS upgrade work

R2.5.0-BSSS_BSA_upgrade
            Dec 5, 2002      Kukhee Kim
            - branch out from R2.5.0 to implement new requirements for BSSS and BSA
              . BSSS supports all of the BSA system EDEFs
              . BSSS EDEFs are controlled by BSA system EDEFFs
              . BSSS/BLD packet structure change to support the extended number of BSSS

R2.5.0      Sep 29, 2022     Dawood Alnajjar
            -Added BLD service support
            -Adapted BSSS asyn class for both BLD and BSSS
            -Eliminated the alternate use of "service" and "channel"

R2.4.0      Sep 2, 2022     Kukhee Kim
            -introduce $(DESC) macro for bsas.db template 
             to avoid a long DESC field issue (overriding $(SECN) in the DESC field)
               

R2.3.0      Aug 9, 2022     Kukhee Kim
            - Support BSA/BSSS/BSAS
            - build against:
                 timing/bsa  R2.0.0-2.0
                 pvxs        R0.3.1-0.0.1


R2.2.1-1.0   Aug 9, 2022     Kukhee Kim
             - tested for B84 TPG and AmcCarrierTprTst application

R2.2.1-mege  Aug 9, 2022     Kukhee Kim
            - merge R2.1.0-prep-bsas branch in to the master


R2.2.1      Aug 9, 2022  Dawood Alnajjar <dnajjar@slac.stanford.edu>
            - Fixed typos in DESC (Severity and added space)

R2.2.0      July 23, 2022
            - PV name change for BSA liniear conversion PVs
              (_OFFSET, _SLOPE) to (__OFFSET_BSA, _SLOPE_BSA) to avoid name conflict with the history module

R2.1.0-5.0         Aug 4, 2022 Kukhee Kim
            - long DESC field issue in another BSSS template
              cherry-pick additional fix from the master branch

R2.1.0-4.0         Aug 2, 2022 Kukhee Kim
            - build against PVXS R0.3.1-0.0.1

R2.1.0-3.0         July 23, 2022  Kukhee Kim
            - expose BSAS command to the symbol table for Cexp shell
            - expose BSSS command to the symbol table for Cexp shell

            (Cherry Picking from master branch - R2.2.0)
            - PV name change for BSA liniear conversion PVs
              (_OFFSET, _SLOPE) to (_OFFSET_BSA, _SLOPE_BSA) to avoid name conflict with the history module
            - introduce new macro $(DESC) for the DESC filed of BSSS scalar PV.
              if $(DESC) is defined, the macro substituion will generate the DESC field with $(DESC) macro,
              if $(DESC) is not defined, the macro subsitition will generate the DESC field with $(SECN) macro - backward compatible
              remark) some of sytem has long $(SECN0 name, it makes trouble to set up the DESC field, we can use a separate macro $(DESC)
                      to avoid generating long DESC with $(SECN)
            - add bsss driver commands to the symbol table for Cexp shell
            (force tagging, Aug 4, 2022)
            - introduce the $(DESC) for bsssChannel control also


R2.1.0-2.0         June 25, 2022  Kukhee Kim
            - build against timing/bsa R2.0.0-2.0

R2.1.0-1.0         May 19, 2022   Kukhee Kim
            - build against timing/bsa R2.0.0-1.0
            - initial release to support BSAS
            - support incremental timestamp update for BSA
            - remove IDX macro (data channel number) in BSSS database template
            - implement software serverity filter for BSSS

            remark) temporally prevent host build to avoid c++ compiler issue
                    thus, build just for linuxRT cross target only
            


R2.1.0-prep-bsas   May 11, 2022    Kukhee Kim
            - rebase/merge to pick up Ernest's changes in the linuxRT_build_only branch
            - build only for linuxRT target
            - build against timing/bsa R2.0.0-1.0
            - add performance meausrement (processing time for BLD/BSSS/BSAS callback)

linuxRT_build_only    May 9, Kukhee Kim
            - branch out from R2.1.0-prep-bsas to try to build linuxRT only

R2.1.0-prep-bsas   March 30, 2022      Kukhee Kim (khkim)
            - branch out from R2.1.0 for developing/testing BSAS
            - build against timing/bsa R2.0.0-prep-bsas for developing
            - support incremental timestamp update for the BSA history buffer
              cooperate with the timing/bsa API layer changes from the last_timestamp branch
            - allow skipping data channels in BSSS 
              if the database template is not loaded for the particular data channel
              or, the channel is diabled by control PV


R2.1.0      Feb 22, 2022
            - enable type conversion to support float32/uint32/int32
            - support global PVs for BSSS Rate Controls
            - add macros $(SECN), $(EGU), $(ADEL), $(HOPR) and $(LOPR) for BSSS scalar
            - workaround for the off by one issue on the BSSS edef severity

R2.0.0      Dec 6, 2021
            - support Beam Synchronous Scalar Service (BSSS)

R1.9.0      Nov 19, 2021
            - upgrade to asyn R4.39-1.0.1
            - use 64bit integer for pulse Id PV
            
R1.8.4      2021-15-11 Carolina B Mattison
	    -Upgrade to asyn R4.39-1.0.0

R1.8.3      2021-11-04 Bruce Hill
			Fix YAMLLOADER_MODULE_VERSION macro

R1.8.2      Oct 11, 2021  M. Dunning (mdunning)
            - Upgrade to asyn R4.39-0.0.1, yamlLoader R2.2.0
            - Use bsa R1.2.0 since R1.2.1 is missing

R1.8.1      Jan 30, 2020        Kukhee Kim (khkim)
            - build with yamlLoader R2.1.1, cpsw/framework R4.3.2 and bsa R1.2.1

R1.8.0      Jan 29, 2020        Kukhee Kim (khkim)
            - build with yamlLoader R2.1.0, cpsw/framework R4.4.1, bsa R1.2.0 and buildroot-2019.08
R1.7.0      Nov 26, 2019        Kukhee Kim (khkim)
            - build with yamlLoader R2.0.0
            - implement named_root to support multiple blades system
              Remark: need to resolve re-entrant problem / will take more time

R1.6.3      Nov 18, 2019        Kukhee Kim (khkim)
            - build with asyn R4.32-1.0.0

R1.6.2      Oct 28, 2019        Kukhee Kim (khkim)
            - build with cpsw/framework R4.3.1, timing/bsa R1.1.5 and yamlLoader R1.1.5

R1.6.1      Oct 2, 2019         Kukhee Kim (khkim)
            - pre-programed BSA name changes: SCH1H SCHTH SCHHH SCS1H SCSTH SCSHH

R1.6.0      Sep 26, 2019        Kukhee Kim (khkim)
            - adjust bsa number (LCLSII BSA starts from 21)

R1.5.6      Sep 20, 2019        Kukhee Kim (khkim)
            - build with cpsw/framework R4.2.0,  timing/bsa R1.1.4 and yamlLoader R1.1.4

R1.5.5      Sep. 16, 2019       Kukhee Kim (khkim)
            - add bsaAsynDriverEnable() and bsaAsynDriverDisable() in ioc shell command

R1.5.4      June 24, 2019       Kukhee Kim (khkim)
            - build with cpsw/framework R4.1.2, yamlLoader R1.1.3

R1.5.3      Nov 8, 2018         Kukhee Kim (KHKIM)
            - build with  cpsw/framework R3.6.6,  yaml-cpp-0.5.3_boost-1.64.0, boost 1.64.0, yamlLoader R1.1.2

R1.5.2      Sep 20, 2018        Kukhee Kim (KHKIM)
            - bumpup cpsw/framework R3.6.6
            - bumpup bsa api        R1.1.2
            - bumpup yamlLoader     R1.1.1

R1.5.1      May 29, 2018        Kukhee Kim (KHKIM)
            - Bumpup bsa api        R1.1.1
            - Bumpup cpsw framewrok R3.6.4

R1.5.0      March 21, 2018      Kukhee Kim (KHKIM)

            - Bumpup yamlLoader     R1.1.0
            - Bumpup bsa api        R1.1.0
            - Bumpup cpsw framework R3.6.3

            - Merge Till's branch 'ts_fixes'
               - yamlLoader R1.1.0-BR-ts
               - Removed unused variable
               - Makefile: removed std=c++0x; replaced -I$(VAR) by $(addprefix -I,$(VAR))
               - ... this expands to an empty string if VAR is empty (the original version to '-I'
                  which can be harmful)





R1.4.0      February 7, 2018    Kukhee Kim (KHKIM)
            - rebuild with bsa API R1.0.4 to fix a bug on  fault buffers when wrapped
            - force tag to R1.4.0

R1.4.0      January 30, 2018    Kukhee Kim (KHKIM)
            - remove MAXBSALENGTH macro from bsa.db template (default BSA Length is 20000, user doens't need to specify the BSA waveform length)
            - increase fault buffer length to one million samples
            remark) the bsa length and fault buffer length are set by default values (20000 and 1000000).
            we can change the default values in run-time but not recommended. Please, look at more details in README file


R1.3.0      January 29, 2018    Kukhee Kim (KHKIM)
            - support 3 data types for bsa "int32", "uint32", and "float32"
              all 3 data types can be supported in no statistics mode,
              in statistics mode, only "in32" can be supported

R1.2.0-Diag October 3, 2017      Kukhee Kim (KHKIM)
            - add an interface to get AmcCarrierBase class for diagnostic buffer for debugging sequence engine
            - BSA client doesn't use the the interface, it is only for TPG
            - thus, BSA client application doesn't need to update with this version
            - it is test a temporal test version, we are not going to deploy it to production

R1.1.0      September 14, 2017    Kukhee Kim (KHKIM)
            - implement slave BSA node for mulitple independent data conversion
            - the slave BSA shares BSA data source with master, but could have separate
              BSA name and BSA database instances
            - user can set up slope and offset independently for the slave BSA,
              and it allows independent data conversion from the master BSA

R1.0.0      July 24, 2017    Kukhee Kim (KHKIM)
            - consideration for Cexp shell
            - build against asyn R4.31-0.1.0
            - apply naming convention results
              . hard coded instance name for 1Hz, 10Hz, fastfeedback and fault buffers

R0.9.9      May 8, 2017      Kukhee Kim (KHKIM)
            - build against cpsw R3.5.4 and  bsa R1.0.1  (API layer)
            - build against yamlLoader R1.0.3 (epics driver layer)
R0.9.8      May 5, 2017      Kukhee Kim (KHKIM)
            - build against yamlLoader R1.0.2
R0.9.7      May 5, 2017      Kukhee Kim (KHKIM)
            - update README file
            - ioc shell command descriptions for addBsa(), and listBsa()
              . change bsaName to bsaKey
            - put default values
              . slope = 1.
              . offset = 0.
              for the bsa.db template
R0.9.6      April 28, 2017    Kukhee Kim (KHKIM)
            - decouple BSA name (uniqueue key) and BSA PV name
            - introduce linear conversion
              . slope
              . offset

R0.9.5      April 10, 2017    Bruce Hill (bhill)
			Updated for git workflow so we can build bsaDriver for other base versions
			Note: We need to move to new version numbering scheme: major.minor.config
				where major indicates major changes to api and/or features,
				minor indicates minor src changes and/or bug fixes,
				and config indicates no src changes, just build configuration such
				as which version of asyn to build against.

R0.9.4      April 6, 2017     Kukhee Kim (KHKIM)
            - build against yamlLoader R1.0.1
R0.9.3      March 23, 2017    Kukhee Kim (KHKIM)
            - implement timestamp for BSA hsitory buffer PVs, but need to be tested....
R0.9.2      March 23, 2017    Kukhee Kim (KHKIM)
            - add up database template for BSA history buffer

R0.9.1      March 23, 2017    Kukhee Kim (KHKIM)
            - build against bsa user space api R1.0.0

R0.9.0      March 22, 2017    Kukhee Kim (KHKIM)
            - initial release
            - prepare for epics-R3.15
            - most of BSA requiredments implemented
            - mssing part is timestamp update for BSA PVs, will be implemented in next release.

March 20, 2017  Kukhe Kim (KHKIM)    Initial work for BSA driver
